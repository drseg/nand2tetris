@testable import Nand2Tetris
import XCTest

final class AdderTests: XCTestCase {

    func test_halfAdder() {
        halfAdder(0, 0) => [0, 0].x2
        halfAdder(0, 1) => [0, 1].x2
        halfAdder(1, 0) => [0, 1].x2
        halfAdder(1, 1) => [1, 0].x2
    }
    
    func test_fullAdder() {
        fullAdder(0, 0, 0) => [0, 0].x2
        fullAdder(0, 0, 1) => [0, 1].x2
        fullAdder(0, 1, 0) => [0, 1].x2
        fullAdder(0, 1, 1) => [1, 0].x2
        
        fullAdder(1, 0, 0) => [0, 1].x2
        fullAdder(1, 0, 1) => [1, 0].x2
        fullAdder(1, 1, 0) => [1, 0].x2
        fullAdder(1, 1, 1) => [1, 1].x2
    }

    func test_add16() {
        add16("0000000000000000".x16,
              "0000000000000000".x16)
           => "0000000000000000".x16
        
        add16("0000000000000000".x16,
              "1111111111111111".x16)
           => "1111111111111111".x16
        
        add16("1010101010101010".x16,
              "0101010101010101".x16)
           => "1111111111111111".x16
        
        add16("0011110011000011".x16,
              "0000111111110000".x16)
           => "0100110010110011".x16
        
        add16("0001001000110100".x16,
              "1001100001110110".x16)
           => "1010101010101010".x16

        add16("1111111111111111".x16,
              "1111111111111111".x16)
           => "1111111111111110".x16
        
        add16("0000000000010001".x16,
              "1111111111111111".x16)
           => "0000000000010000".x16
        //     17 + (-1) = 16
        
        add16("1111111111101110".x16,
              "1111111111111111".x16)
           => "1111111111101101".x16
        //    (-18) + (-1) = -19
    }
    
    func testInc16() {
        inc16("0000000000000000".x16)
           => "0000000000000001".x16
        
        inc16("1111111111111111".x16)
           => "0000000000000000".x16
        
        inc16("0000000000000101".x16)
           => "0000000000000110".x16
        
        inc16("1111111111111011".x16)
           => "1111111111111100".x16
    }
}
